services:

  frontend:
    build: ./frontend/clientapp/
    restart: always
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - cms-subnet

  file-service:
    build: ./backend/filestorage-service/
    restart: always
    container_name: file-service
    ports:
      - "8000:8000"
    environment:
      FILE_STORAGE_STATIC_FOLDER: ${FILE_STORAGE_STATIC_FOLDER}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./backend/filestorage-service/images:${FILE_STORAGE_STATIC_FOLDER}
    networks:
      - cms-subnet

  blog-service:
    build: ./backend/blog-service/
    restart: always
    container_name: blog-service
    ports:
      - "8083:8083"
    environment:
      MYSQL_HOST: "db"
      MYSQL_BLOG_SERVICE_PASSWORD: ${MYSQL_BLOG_SERVICE_PASSWORD}
      MYSQL_BLOG_SERVICE_USER: ${MYSQL_BLOG_SERVICE_USER}
      KEYCLOAK_BLOG_REALM_ID: ${KEYCLOAK_BLOG_REALM_ID}
      KEYCLOAK_BLOG_CLIENT_ID: ${KEYCLOAK_BLOG_CLIENT_ID}
      KEYCLOAK_BLOG_CLIENT_SECRET: ${KEYCLOAK_BLOG_CLIENT_SECRET}
      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT}
      KEYCLOAK_PROTOCOL: ${KEYCLOAK_PROTOCOL}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      mysql_svr:
        condition: service_healthy
    networks:
      - cms-subnet

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    container_name: ${KEYCLOAK_HOSTNAME}
    command: start-dev --proxy-headers forwarded --import-realm
    ports:
      - "${KEYCLOAK_PORT}:${KEYCLOAK_PORT}"
    environment:
      KC_HTTP_PORT: ${KEYCLOAK_PORT}
      KC_DB: mysql
      KC_DB_URL_HOST: mysql_svr
      KC_DB_URL_DATABASE: ${KEYCLOAK_DATABASE}
      KC_DB_PASSWORD: ${KEYCLOAK_MYSQL_PASSWORD}
      KC_DB_USERNAME: ${KEYCLOAK_MYSQL_USER}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    volumes:
      - ./backend/auth-service/:/opt/keycloak/data/import
    depends_on:
      mysql_svr:
        condition: service_healthy
    networks:
      - cms-subnet

  mysql_svr:
    image: mysql:latest
    restart: always
    container_name: db
    # ports:
    #   - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./backend/mysql/db:/var/lib/mysql
      - ./backend/mysql/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u ${MYSQL_BLOG_DB_NAME} --password=${MYSQL_PASSWORD}
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cms-subnet

networks:
  cms-subnet:
    driver: bridge